document.addEventListener('DOMContentLoaded', () => {

    const skillsData = {
        operacional: { 
            label: 'Operacional', 
            data: [8, 5, 2],
            description: '<strong>N√≠vel Operacional:</strong> Foco no "como fazer". Essencial para a execu√ß√£o de tarefas e supervis√£o direta. Exige dom√≠nio de ferramentas e m√©todos espec√≠ficos da √°rea, como conhecimento de software, opera√ß√£o de equipamentos e compreens√£o de processos de fabrica√ß√£o.'
        },
        gerencial: { 
            label: 'Gerencial', 
            data: [5, 8, 5],
            description: '<strong>N√≠vel Gerencial:</strong> Equil√≠brio entre a execu√ß√£o e a estrat√©gia. Crucial para motivar equipes e construir relacionamentos eficazes. Envolve comunica√ß√£o, empatia, negocia√ß√£o e resolu√ß√£o de conflitos, al√©m de uma vis√£o mais ampla dos objetivos.'
        },
        estrategico: { 
            label: 'Estrat√©gico', 
            data: [2, 5, 8],
            description: '<strong>N√≠vel Estrat√©gico:</strong> Vis√£o do "todo". Mais relevante para a alta dire√ß√£o, que define a vis√£o, miss√£o e estrat√©gia da organiza√ß√£o. Exige pensamento abstrato, capacidade de diagnosticar problemas complexos e formular solu√ß√µes de longo prazo.'
        }
    };

    const mintzbergData = [
        { 
            category: 'Pap√©is Interpessoais', 
            icon: 'ü§ù',
            description: 'Envolvem o relacionamento do gestor com outras pessoas, tanto dentro quanto fora da organiza√ß√£o.',
            roles: [
                { name: 'Figura de Proa', description: 'O gestor atua como um s√≠mbolo da organiza√ß√£o, realizando deveres cerimoniais e sociais. Ele representa a empresa em eventos, inaugura√ß√µes, ou quando recebe visitantes. √â a face p√∫blica da organiza√ß√£o.' },
                { name: 'L√≠der', description: 'Envolve a responsabilidade de motivar e dirigir os subordinados. O gestor √© respons√°vel por contratar, treinar, avaliar e recompensar o desempenho dos colaboradores. Ele inspira e influencia a equipe.' },
                { name: 'Elo', description: 'O gestor mant√©m uma rede de contatos externos, tanto dentro da organiza√ß√£o (com outros departamentos) quanto fora dela (com clientes, fornecedores, parceiros, √≥rg√£os reguladores). Ele constr√≥i e mant√©m relacionamentos que trazem informa√ß√µes e apoio para a organiza√ß√£o.' }
            ]
        },
        { 
            category: 'Pap√©is Informacionais',
            icon: '‚ÑπÔ∏è',
            description: 'Esses pap√©is se referem ao gerenciamento e √† dissemina√ß√£o de informa√ß√µes. O gestor √© um centro neural de informa√ß√µes para a organiza√ß√£o.',
            roles: [
                { name: 'Monitor', description: 'O gestor busca e recebe uma ampla variedade de informa√ß√µes internas e externas para compreender as opera√ß√µes da organiza√ß√£o e o ambiente em que ela atua. Ele est√° atento a dados, tend√™ncias e fofocas.' },
                { name: 'Disseminador', description: 'O gestor transmite informa√ß√µes importantes de fontes externas ou de outros departamentos para os membros de sua equipe. Ele filtra e distribui as informa√ß√µes relevantes para que seus subordinados possam realizar suas tarefas.' },
                { name: 'Porta-voz', description: 'O gestor transmite informa√ß√µes sobre os planos, pol√≠ticas, a√ß√µes e resultados da organiza√ß√£o para pessoas de fora da unidade ou da pr√≥pria organiza√ß√£o. Ele √© o comunicador oficial.' }
            ]
        },
        { 
            category: 'Pap√©is Decis√≥rios',
            icon: '‚öñÔ∏è',
            description: 'Esses pap√©is envolvem a tomada de decis√µes e a aloca√ß√£o de recursos. O gestor √© o principal tomador de decis√µes em sua √°rea de responsabilidade.',
            roles: [
                { name: 'Empreendedor', description: 'O gestor busca oportunidades de melhoria e inicia projetos de mudan√ßa. Ele √© o agente de inova√ß√£o, identificando novas ideias e transformando-as em iniciativas concretas.' },
                { name: 'Gerenciador de Conflitos', description: 'O gestor √© respons√°vel por corrigir a√ß√µes corretivas quando a organiza√ß√£o enfrenta problemas inesperados, crises ou conflitos internos/externos. Ele lida com as press√µes e as interrup√ß√µes.' },
                { name: 'Alocador de Recursos', description: 'O gestor √© respons√°vel por decidir onde os recursos da organiza√ß√£o (dinheiro, tempo, equipamentos, pessoal) ser√£o aplicados. Ele define prioridades e distribui os ativos.' },
                { name: 'Negociador', description: 'O gestor representa a organiza√ß√£o em negocia√ß√µes importantes com outras partes, como fornecedores, clientes, sindicatos ou √≥rg√£os reguladores. Ele busca acordos que beneficiem a organiza√ß√£o.' }
            ]
        }
    ];
    
    const organizationalFunctions = [
        { name: 'Produ√ß√£o', icon: 'üè≠', content: 'Esta fun√ß√£o √© o cora√ß√£o de qualquer organiza√ß√£o que produza bens ou servi√ßos. Ela engloba desde a aquisi√ß√£o de mat√©rias-primas e insumos, passando pelo processo de transforma√ß√£o, at√© a entrega do produto ou servi√ßo final. O objetivo principal √© garantir que a produ√ß√£o seja eficiente, de alta qualidade e atenda √†s demandas do mercado. Isso envolve Gest√£o da Cadeia de Suprimentos (otimiza√ß√£o do fluxo de materiais desde o fornecedor at√© o consumidor final), Controle de Qualidade (sistemas para garantir padr√µes estabelecidos), Gest√£o de Estoques (equil√≠brio entre demanda e custos de armazenagem), Manuten√ß√£o (bom funcionamento de m√°quinas) e Otimiza√ß√£o de Processos (melhorias cont√≠nuas nos m√©todos de trabalho).' },
        { name: 'Marketing', icon: 'üéØ', content: 'O marketing √© a ponte entre a empresa e seus clientes. Sua principal fun√ß√£o √© identificar e satisfazer as necessidades e desejos do mercado, criando valor para os consumidores e gerando lucro para a organiza√ß√£o. Suas atividades incluem Pesquisa de Mercado (coleta e an√°lise de dados sobre clientes, concorrentes e tend√™ncias), Desenvolvimento de Produto (cria√ß√£o e aprimoramento de produtos/servi√ßos), Precifica√ß√£o (defini√ß√£o de estrat√©gias competitivas e lucrativas), Promo√ß√£o e Comunica√ß√£o (campanhas de publicidade, rela√ß√µes p√∫blicas, vendas pessoais e marketing digital), Canais de Distribui√ß√£o (escolha e gest√£o de como os produtos chegam aos consumidores) e Branding (constru√ß√£o e gest√£o da marca da empresa).' },
        { name: 'RH', icon: 'üë•', content: 'Esta fun√ß√£o √© vital para qualquer organiza√ß√£o, pois lida com o seu ativo mais valioso: as pessoas. O RH n√£o se limita a contratar e demitir; ele √© respons√°vel por atrair, desenvolver, motivar e reter talentos, garantindo que a for√ßa de trabalho esteja alinhada aos objetivos estrat√©gicos da empresa. As principais atividades incluem Recrutamento e Sele√ß√£o (atra√ß√£o e escolha de candidatos qualificados), Treinamento e Desenvolvimento (capacita√ß√£o para novas habilidades), Gest√£o de Desempenho (avalia√ß√£o e feedback), Remunera√ß√£o e Benef√≠cios (pol√≠ticas salariais e benef√≠cios competitivos), Clima Organizacional e Cultura Empresarial (promo√ß√£o de ambiente saud√°vel e alinhado aos valores), e Rela√ß√µes Trabalhistas (gest√£o com sindicatos e leis).' },
        { name: 'Finan√ßas', icon: 'üí∞', content: 'A fun√ß√£o financeira √© respons√°vel pela gest√£o dos recursos monet√°rios da organiza√ß√£o. Ela garante que a empresa tenha os fundos necess√°rios para operar, investir e crescer, al√©m de assegurar que esses recursos sejam utilizados de forma eficiente. As atividades-chave s√£o Planejamento Financeiro (elabora√ß√£o de or√ßamentos e proje√ß√µes), Gest√£o de Fluxo de Caixa (monitoramento de entradas e sa√≠das), Controle de Custos (an√°lise para maximizar lucratividade), An√°lise de Investimentos (avalia√ß√£o de novos projetos), Capta√ß√£o de Recursos (obten√ß√£o de fundos) e Gest√£o de Riscos Financeiros (identifica√ß√£o e mitiga√ß√£o de riscos √† sa√∫de financeira).' },
        { name: 'TI', icon: 'üíª', content: 'A TI se tornou uma fun√ß√£o estrat√©gica indispens√°vel em qualquer organiza√ß√£o moderna. Ela √© respons√°vel por gerenciar e otimizar os sistemas de informa√ß√£o, redes e infraestrutura tecnol√≥gica que suportam todas as outras √°reas da empresa. Suas atividades incluem Gest√£o de Infraestrutura de TI (manuten√ß√£o de servidores, redes, hardware e software), Desenvolvimento de Sistemas (cria√ß√£o e implementa√ß√£o de softwares), Seguran√ßa da Informa√ß√£o (prote√ß√£o de dados), Suporte ao Usu√°rio (assist√™ncia t√©cnica), Inova√ß√£o Digital (pesquisa e implementa√ß√£o de novas tecnologias) e Gest√£o de Dados (coleta, armazenamento e an√°lise de dados para decis√µes).' }
    ];

    const organizationalStructures = [
        {
            name: 'Funcional',
            icon: 'üè¢',
            description: 'Tradicional, baseada em departamentos especializados (RH, Finan√ßas, etc).',
            pros: ['Efici√™ncia: Permite a especializa√ß√£o e o aprofundamento do conhecimento em cada √°rea.', 'Clareza de Responsabilidades: Cada departamento tem um escopo de atua√ß√£o bem definido.', 'Controle Centralizado: Facilita o controle e a coordena√ß√£o pela alta administra√ß√£o.', 'Economias de Escala: Otimiza o uso de recursos e evita duplica√ß√£o de fun√ß√µes.'],
            cons: ['Silos Organizacionais: Pode levar √† falta de comunica√ß√£o e colabora√ß√£o entre departamentos.', 'Lentid√£o na Resposta: Tomada de decis√£o pode ser lenta, exigindo coordena√ß√£o multifuncional.', 'Foco Interno: √Åreas podem se preocupar mais com suas pr√≥prias metas do que com os objetivos globais.', 'Dificuldade de Inova√ß√£o: A rigidez pode inibir a criatividade e a inova√ß√£o.'],
            ideal: 'Empresas de pequeno e m√©dio porte com produtos e ambiente est√°veis.'
        },
        {
            name: 'Matricial',
            icon: 'üåê',
            description: 'Combina estrutura funcional com estrutura por projetos, produtos ou clientes. Colaboradores reportam a dois gestores.',
            pros: ['Flexibilidade e Adaptabilidade: Permite adapta√ß√£o r√°pida a projetos espec√≠ficos e demandas do mercado.', 'Compartilhamento de Recursos: Otimiza o uso de especialistas em diferentes projetos.', 'Comunica√ß√£o Interdepartamental: Incentiva a colabora√ß√£o e troca de informa√ß√µes.', 'Desenvolvimento de Habilidades: Funcion√°rios ganham experi√™ncia em diversas √°reas e projetos.'],
            cons: ['Conflitos de Autoridade: Dupla subordina√ß√£o pode gerar confus√£o e conflitos.', 'Estresse nos Colaboradores: Dificuldade em equilibrar demandas de dois chefes.', 'Complexidade de Gest√£o: Exige gestores altamente capacitados em comunica√ß√£o e negocia√ß√£o.', 'Custos de Coordena√ß√£o: Pode exigir mais tempo e recursos para coordenar atividades.'],
            ideal: 'Empresas que operam em ambientes din√¢micos, com muitos projetos simult√¢neos, como consultoria, desenvolvimento de software, publicidade ou constru√ß√£o.'
        },
        {
            name: 'Por Processos',
            icon: 'üîÑ',
            description: 'Foca na otimiza√ß√£o dos fluxos de trabalho e nos resultados para o cliente, em vez de se basear em fun√ß√µes ou departamentos.',
            pros: ['Foco no Cliente: Todas as atividades alinhadas para atender √†s necessidades do cliente.', 'Efici√™ncia e Velocidade: Reduz gargalos e burocracia, agilizando a entrega.', 'Melhoria Cont√≠nua: Facilita a identifica√ß√£o de inefici√™ncias e implementa√ß√£o de melhorias.', 'Vis√£o Sist√™mica: Colaboradores compreendem como seu trabalho se encaixa no fluxo geral.'],
            cons: ['Dificuldade de Implementa√ß√£o: Requer mudan√ßa cultural significativa e pode gerar resist√™ncia.', 'Perda de Especializa√ß√£o Funcional: Conhecimento aprofundado em uma √°rea pode ser dilu√≠do.', 'Problemas de Controle: Pode ser mais dif√≠cil manter controle sobre atividades em processos amplos.', 'Requerimento de Equipes Autogerenci√°veis: Demanda alta capacidade de autogest√£o e colabora√ß√£o.'],
            ideal: 'Empresas que buscam agilidade, focam na experi√™ncia do cliente e querem otimizar seus fluxos de trabalho, como servi√ßos, tecnologia ou manufatura com foco em produ√ß√£o enxuta.'
        }
    ];

    const globalizationData = {
        labels: ['Vantagens', 'Desafios'],
        datasets: [{
            label: 'Impactos da Globaliza√ß√£o',
            data: [6, 7],
            backgroundColor: ['#3b82f6', '#ef4444'],
            borderColor: ['#2563eb', '#dc2626'],
            borderWidth: 1
        }]
    };

    const esgData = [
        { 
            title: 'Ambiental (E)', 
            content: 'Refere-se ao impacto da empresa no meio ambiente e sua gest√£o de recursos naturais. Desafios incluem escassez de √°gua, mudan√ßas clim√°ticas, polui√ß√£o e perda de biodiversidade. As implica√ß√µes para as empresas envolvem gest√£o de res√≠duos (reciclagem, redu√ß√£o de embalagens), efici√™ncia energ√©tica (energias renov√°veis, otimiza√ß√£o de consumo), uso sustent√°vel de recursos (mat√©rias-primas sustent√°veis, redu√ß√£o de √°gua) e conformidade regulat√≥ria (adapta√ß√£o a legisla√ß√µes ambientais). O gestor deve implementar sistemas de gest√£o ambiental e promover a ecoefici√™ncia.' 
        },
        { 
            title: 'Social (S)', 
            content: 'Foca nas rela√ß√µes da empresa com pessoas e comunidades. Desafios abrangem desigualdade social, direitos trabalhistas, sa√∫de e seguran√ßa no trabalho, diversidade e inclus√£o, e engajamento comunit√°rio. As implica√ß√µes para as empresas incluem garantir condi√ß√µes de trabalho justas e seguras (n√£o utilizar trabalho infantil ou for√ßado, respeitar liberdade de associa√ß√£o), promover um ambiente diverso e inclusivo (valorizar diferentes origens, g√™neros, etnias), assegurar a sa√∫de e seguran√ßa (programas robustos de bem-estar f√≠sico e mental), e contribuir para o desenvolvimento das comunidades (projetos sociais, voluntariado). O gestor deve desenvolver pol√≠ticas de RH inclusivas e fomentar um clima organizacional positivo.' 
        },
        { 
            title: 'Governan√ßa (G)', 
            content: 'Relacionado √† forma como a empresa √© administrada, incluindo a estrutura de lideran√ßa, remunera√ß√£o de executivos, auditorias, controles internos e direitos dos acionistas. Desafios envolvem corrup√ß√£o, falta de transpar√™ncia, conflitos de interesse e aus√™ncia de presta√ß√£o de contas. As implica√ß√µes para as empresas s√£o ter um conselho de administra√ß√£o eficaz (diverso, independente), implementar c√≥digos de conduta e pol√≠ticas anticorrup√ß√£o (canais de den√∫ncia, treinamentos de compliance), e publicar relat√≥rios transparentes (sustentabilidade, financeiros). O gestor deve assegurar uma governan√ßa robusta e √©tica, protegendo os direitos dos acionistas.' 
        }
    ];

    const ontologicalData = [
        {
            name: 'Realidade',
            action: 'ESTRUTURAR',
            questions: [
                'Conhe√ßo (crio) a pr√°tica e impacto do meu trabalho e repasso para a minha equipe?',
                'Conhe√ßo (crio) todas as rotinas e os fluxos de trabalho e repasso para a minha equipe?',
                'Os princ√≠pios e as regras do jogo est√£o claras?',
                'As posi√ß√µes e pap√©is s√£o definidos?'
            ]
        },
        {
            name: 'Resultado',
            action: 'PILARES',
            questions: [
                'Tenho uma estrutura de acompanhamento vis√≠vel para todos e o utilizo para tomada de decis√µes?',
                'Quem decide em cada contexto e momento est√° definido?',
                'Os pedidos que realizo s√£o efetivos e com crit√©rios de satisfa√ß√£o?',
                'Trabalho o processo de responsabiliza√ß√£o e acompanhamento ao inv√©s de depend√™ncia e cobran√ßa?',
                'Realizo o mapeamento e me relaciono com os atores externamente?',
                'Valoriza e reconhece os bons resultados?'
            ]
        },
        {
            name: 'Rela√ß√£o',
            action: 'MOVER',
            questions: [
                'Abro espa√ßo para trabalhar confian√ßa, engajamento e gera√ß√£o de orgulho?',
                'Compreendo os funcionamentos dos grupos? Abro espa√ßo para a pr√©-tarefa?',
                'A estrutura e minha forma de trabalhar gera colabora√ß√£o?',
                'Conhe√ßo a rede informal?',
                'Conhe√ßo as normas e pactos do grupo?'
            ]
        },
        {
            name: 'Possibilidade',
            action: 'EXPANDIR',
            questions: [
                'As opini√µes diversas s√£o estimuladas?',
                'Temos momentos para conversas estrat√©gicas?',
                'Envolvo a equipe na busca de solu√ß√µes?',
                'Abro espa√ßo para os fracassos inteligentes?',
                'Incentiva a troca de experi√™ncias e novos ares?',
                'Estimula estudos sobre boas pr√°ticas'
            ]
        },
        {
            name: 'Aprendizagem',
            action: 'APERFEI√áOAR',
            questions: [
                'Os feedbacks s√£o constantes?',
                'Temos momentos coletivos e individuais voltados √† aprendizagem?',
                'Reconhe√ßo os avan√ßos e compartilho os bons exemplos?',
                'Delego desafios complexos'
            ]
        }
    ];

    const productivityErrorsData = {
        labels: [
            'N√£o reconhecer/valorizar as conquistas (63%)',
            'N√£o dar dire√ß√µes claras (57%)',
            'N√£o ter tempo para conversar (52%)',
            'N√£o tem espa√ßos de conviv√™ncia e autopercep√ß√£o (51%)',
            'Tomar cr√©dito pelas ideias dos outros (47%)',
            'N√£o oferecer cr√≠tica construtiva (39%)',
            'N√£o saber o nome dos seus funcion√°rios (36%)',
            'Se recusar falar com as pessoas por telefone/pessoalmente (34%)',
            'N√£o perguntar sobre a vida fora do trabalho (23%)'
        ],
        datasets: [{
            label: 'Erros que Afetam a Produtividade',
            data: [63, 57, 52, 51, 47, 39, 36, 34, 23],
            backgroundColor: '#3b82f6',
            borderColor: '#2563eb',
            borderWidth: 1
        }]
    };

    const tuckmanStagesData = {
        forming: {
            name: 'Forma√ß√£o',
            description: 'Membros buscam seguran√ßa e n√£o se exp√µem, pois querem ser aceitos. Evitam conflitos e buscam o l√≠der para valida√ß√£o, sentindo-se inseguros. Desconhecem as regras, prop√≥sitos e limites.',
            managerActions: [
                'Definir roda de identidade (impacto)',
                'Definir Princ√≠pios Organizacionais',
                'Buscar conhecer sua equipe',
                'Gerar momentos de integra√ß√£o para estimular confian√ßa'
            ]
        },
        storming: {
            name: 'Turbul√™ncia',
            description: 'Membros disputam pap√©is, exp√µem opini√µes e entram em conflitos. Questionam processos, decis√µes e autoridades. Alguns querem predominar, outros permanecem na zona de conforto. Buscam clareza. Qualidade da entrega diminui, prazos atrasam.',
            managerActions: [
                'Acordos claros de funcionamento e modelo de gest√£o',
                'Defini√ß√£o de pap√©is, autonomia, metas e monitoramento',
                'Estimular a troca de opini√µes divergentes',
                'Treinar a equipe para feedbacks e gest√£o de conflitos (CNV)',
                'Promover a conviv√™ncia da equipe.',
                'Ado√ß√£o do sistema de gest√£o'
            ]
        },
        norming: {
            name: 'Normatiza√ß√£o',
            description: 'Equipe funciona bem, embora possa performar melhor. Define suas normas de funcionamento. Pap√©is s√£o definidos e aceitos. Membros sem medo do conflito.',
            managerActions: [
                'Criar sistema de gest√£o',
                'Convocar o time para pensar estrategicamente',
                'Gerar mais autonomia',
                'Metas mais desafiadoras',
                'Feedback e reconhecimento constantes',
                'Identificar pontos de melhoria (ex: fluxos dos processos)'
            ]
        },
        performing: {
            name: 'Performance',
            description: 'Equipe aut√¥noma. Medidas funcionais e compartilhadas. Gestor foca no desenvolvimento da equipe e executa pouco. Cultura e identidade pr√≥pria e definida. Membros do grupo se preocupam uns com os outros.',
            managerActions: [
                'Criar novas formas de engajamento',
                'Pensar em novos formatos de recompensa',
                'Desenvolver talentos e rod√≠zio das lideran√ßas',
                'Difundir boas pr√°ticas',
                'Reuni√µes de troca de aprendizagem',
                'Reuni√µes para conversar sobre o funcionamento da equipe',
                'Comemorar'
            ]
        },
        transferring: {
            name: 'Dissolu√ß√£o',
            description: 'Fase final onde a equipe se desfaz ap√≥s a conclus√£o do projeto ou objetivo. Pode haver sentimentos de perda ou celebra√ß√£o.',
            managerActions: [
                'Reconhecer o trabalho realizado',
                'Celebrar as conquistas',
                'Facilitar a transi√ß√£o dos membros para novas equipes/projetos',
                'Coletar li√ß√µes aprendidas'
            ]
        }
    };
    
    const lencioniChallengesData = {
        confianca: {
            name: 'Confian√ßa',
            description: 'Habilidade de estar aberto, sem filtros. A base da pir√¢mide, sem a qual os outros desafios n√£o podem ser superados. Envolve vulnerabilidade e a cren√ßa na boa inten√ß√£o dos colegas.'
        },
        conflito: {
            name: 'Sem medo do conflito',
            description: 'Habilidade de discordar e desafiar abertamente. Conflitos construtivos s√£o essenciais para tomar as melhores decis√µes e evitar a "harmonia artificial".'
        },
        comprometimento: {
            name: 'Comprometimento',
            description: 'Comprar totalmente decis√µes cr√≠ticas. Ap√≥s o debate aberto (conflito), a equipe deve se comprometer com a decis√£o, mesmo que nem todos concordem inicialmente.'
        },
        responsabilidade: {
            name: 'Responsabilidade',
            description: 'Ser respons√°vel pelo outro. Os membros da equipe devem se responsabilizar mutuamente pelo cumprimento das decis√µes e padr√µes de desempenho.'
        },
        resultados: {
            name: 'Foco nos resultados da equipe',
            description: 'O objetivo final de uma equipe de alto desempenho. Os membros priorizam os resultados coletivos acima dos individuais ou departamentais.'
        }
    };


    let skillsChartInstance;
    const skillsChartCtx = document.getElementById('skillsChart').getContext('2d');
    const skillDescriptionDiv = document.getElementById('skill-description');
    
    function createOrUpdateSkillsChart(level) {
        if (skillsChartInstance) {
            skillsChartInstance.destroy();
        }
        skillsChartInstance = new Chart(skillsChartCtx, {
            type: 'radar',
            data: {
                labels: ['Habilidades T√©cnicas', 'Habilidades Humanas', 'Habilidades Conceituais'],
                datasets: [{
                    label: skillsData[level].label,
                    data: skillsData[level].data,
                    fill: true,
                    backgroundColor: 'rgba(59, 130, 246, 0.2)',
                    borderColor: 'rgb(59, 130, 246)',
                    pointBackgroundColor: 'rgb(59, 130, 246)',
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: 'rgb(59, 130, 246)'
                }]
            },
            options: {
                maintainAspectRatio: false,
                elements: {
                    line: {
                        borderWidth: 3
                    }
                },
                scales: {
                    r: {
                        angleLines: {
                            display: false
                        },
                        suggestedMin: 0,
                        suggestedMax: 10,
                        pointLabels: {
                             font: {
                                size: 10
                            }
                        }
                    }
                },
                plugins: {
                   legend: {
                        display: false
                   }
                }
            }
        });
        skillDescriptionDiv.innerHTML = `<p>${skillsData[level].description}</p>`;
    }

    document.querySelectorAll('.skill-btn').forEach(button => {
        button.addEventListener('click', (e) => {
            document.querySelectorAll('.skill-btn').forEach(btn => {
                btn.classList.remove('bg-blue-100', 'text-blue-800');
                btn.classList.add('bg-slate-100', 'text-slate-800');
            });
            e.target.classList.add('bg-blue-100', 'text-blue-800');
            e.target.classList.remove('bg-slate-100', 'text-slate-800');
            createOrUpdateSkillsChart(e.target.dataset.level);
        });
    });

    createOrUpdateSkillsChart('operacional');

    const mintzbergContainer = document.getElementById('mintzberg-roles');
    mintzbergData.forEach(group => {
        const groupElement = document.createElement('div');
        groupElement.innerHTML = `
            <details class="bg-slate-50 p-4 rounded-lg cursor-pointer">
                <summary class="font-bold text-lg flex items-center">
                    <span class="text-2xl mr-3">${group.icon}</span>
                    <div>
                        ${group.category}
                        <p class="text-sm font-normal text-slate-600">${group.description}</p>
                    </div>
                </summary>
                <ul class="mt-4 pl-8 list-disc space-y-2 text-slate-700">
                    ${group.roles.map(role => `<li><strong>${role.name}:</strong> ${role.description}</li>`).join('')}
                </ul>
            </details>
        `;
        mintzbergContainer.appendChild(groupElement);
    });
    
    const focusStructureBtn = document.getElementById('focus-structure-btn');
    const focusPeopleBtn = document.getElementById('focus-people-btn');
    const focusContentDiv = document.getElementById('focus-content');

    const focusData = {
        structure: '<strong>Foco na Estrutura:</strong> Necessita realizar tarefas, ocupar responsabilidades e conhecer os processos gerenciais. Os resultados s√£o alcan√ßados atrav√©s de Planejamento, Organiza√ß√£o e Medi√ß√£o. A express√£o chave √© "Gerar resultado".',
        people: '<strong>Foco nas Pessoas:</strong> Necessita satisfazer as necessidades emocionais e conhecer a din√¢mica relacional e de grupos. A gest√£o √© sobre Rela√ß√£o, Mobiliza√ß√£o, Alinhamento e Cria√ß√£o Coletiva. A express√£o chave √© "Fazer acontecer".'
    };

    function updateFocusContent(type) {
        focusContentDiv.innerHTML = `<p>${focusData[type]}</p>`;
        if (type === 'structure') {
            focusStructureBtn.classList.add('bg-blue-100', 'text-blue-800');
            focusStructureBtn.classList.remove('bg-slate-100', 'text-slate-800');
            focusPeopleBtn.classList.remove('bg-blue-100', 'text-blue-800');
            focusPeopleBtn.classList.add('bg-slate-100', 'text-slate-800');
        } else {
            focusPeopleBtn.classList.add('bg-blue-100', 'text-blue-800');
            focusPeopleBtn.classList.remove('bg-slate-100', 'text-slate-800');
            focusStructureBtn.classList.remove('bg-blue-100', 'text-blue-800');
            focusStructureBtn.classList.add('bg-slate-100', 'text-slate-800');
        }
    }

    focusStructureBtn.addEventListener('click', () => updateFocusContent('structure'));
    focusPeopleBtn.addEventListener('click', () => updateFocusContent('people'));
    updateFocusContent('structure'); // Initial load

    const ontologicalTabsContainer = document.getElementById('ontological-tabs');
    const ontologicalContentContainer = document.getElementById('ontological-content');

    ontologicalData.forEach((item, index) => {
        const tab = document.createElement('button');
        tab.className = `ontological-tab-button whitespace-nowrap py-2 px-3 border-b-2 font-medium text-sm rounded-t-lg ${index === 0 ? 'active' : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'}`;
        tab.textContent = item.name;
        tab.dataset.target = `ontological-content-${index}`;
        ontologicalTabsContainer.appendChild(tab);

        const content = document.createElement('div');
        content.id = `ontological-content-${index}`;
        content.className = `p-2 ${index !== 0 ? 'hidden' : ''}`;
        content.innerHTML = `
            <h5 class="text-xl font-bold mb-2 flex items-center"><span class="text-2xl mr-2">üí°</span> ${item.name} <span class="ml-auto text-blue-600 text-sm font-semibold">${item.action}</span></h5>
            <ul class="list-disc list-inside space-y-1 text-slate-600 text-sm">
                ${item.questions.map(q => `<li>${q}</li>`).join('')}
            </ul>
        `;
        ontologicalContentContainer.appendChild(content);
    });

    ontologicalTabsContainer.addEventListener('click', e => {
        if (e.target.classList.contains('ontological-tab-button')) {
            ontologicalTabsContainer.querySelectorAll('.ontological-tab-button').forEach(tab => tab.classList.remove('active'));
            e.target.classList.add('active');
            ontologicalContentContainer.querySelectorAll('div').forEach(content => content.classList.add('hidden'));
            document.getElementById(e.target.dataset.target).classList.remove('hidden');
        }
    });

    document.querySelectorAll('.pentagon-segment').forEach(segment => {
        segment.addEventListener('click', (e) => {
            const targetTab = e.target.dataset.ontologicalTab;
            ontologicalTabsContainer.querySelectorAll('.ontological-tab-button').forEach(tab => {
                if (tab.textContent.toLowerCase() === targetTab) {
                    tab.click();
                }
            });
        });
    });

    const tabsContainer = document.getElementById('org-tabs');
    const contentContainer = document.getElementById('org-content');

    organizationalFunctions.forEach((func, index) => {
        const tab = document.createElement('button');
        tab.className = `tab-button whitespace-nowrap py-2 px-3 border-b-2 font-medium text-sm rounded-t-lg ${index === 0 ? 'active' : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'}`;
        tab.textContent = func.name;
        tab.dataset.target = `content-${index}`;
        tabsContainer.appendChild(tab);

        const content = document.createElement('div');
        content.id = `content-${index}`;
        content.className = `p-2 ${index !== 0 ? 'hidden' : ''}`;
        content.innerHTML = `<h5 class="text-xl font-bold mb-2 flex items-center"><span class="text-2xl mr-2">${func.icon}</span> ${func.name}</h5><p class="text-slate-600">${func.content}</p>`;
        contentContainer.appendChild(content);
    });

    tabsContainer.addEventListener('click', e => {
        if (e.target.classList.contains('tab-button')) {
            tabsContainer.querySelectorAll('.tab-button').forEach(tab => tab.classList.remove('active'));
            e.target.classList.add('active');
            contentContainer.querySelectorAll('div').forEach(content => content.classList.add('hidden'));
            document.getElementById(e.target.dataset.target).classList.remove('hidden');
        }
    });

    const structuresContainer = document.getElementById('structures-container');
    const structureDetailsContainer = document.getElementById('structure-details');

    organizationalStructures.forEach((struc, index) => {
        const card = document.createElement('div');
        card.className = `structure-card bg-white p-6 rounded-xl border-2 border-transparent cursor-pointer transition-all duration-300 ${index === 0 ? 'active' : ''}`;
        card.dataset.index = index;
        card.innerHTML = `
            <div class="flex items-center text-xl font-bold mb-3">
                <span class="text-3xl mr-3">${struc.icon}</span>
                <span>${struc.name}</span>
            </div>
            <p class="text-sm text-slate-600">${struc.description}</p>
        `;
        structuresContainer.appendChild(card);
    });
    
    function updateStructureDetails(index) {
        const struc = organizationalStructures[index];
        structureDetailsContainer.innerHTML = `
            <h5 class="text-2xl font-bold mb-4 text-blue-600">${struc.name}</h5>
            <div class="grid md:grid-cols-3 gap-6 text-sm">
                <div>
                    <h6 class="font-bold text-slate-800 mb-2">Vantagens</h6>
                    <ul class="list-disc list-inside space-y-1 text-slate-600">${struc.pros.map(p => `<li>${p}</li>`).join('')}</ul>
                </div>
                <div>
                    <h6 class="font-bold text-slate-800 mb-2">Desvantagens</h6>
                    <ul class="list-disc list-inside space-y-1 text-slate-600">${struc.cons.map(c => `<li>${c}</li>`).join('')}</ul>
                </div>
                <div>
                    <h6 class="font-bold text-slate-800 mb-2">Ideal para:</h6>
                    <p class="text-slate-600">${struc.ideal}</p>
                </div>
            </div>
        `;
    }

    structuresContainer.addEventListener('click', e => {
        const card = e.target.closest('.structure-card');
        if (card) {
            structuresContainer.querySelectorAll('.structure-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
            updateStructureDetails(card.dataset.index);
        }
    });
    
    updateStructureDetails(0);

    const leadershipTabsContainer = document.getElementById('leadership-tabs');
    const leadershipContentContainer = document.getElementById('leadership-content');

    leadershipTabsContainer.addEventListener('click', e => {
        if (e.target.classList.contains('tab-button')) {
            leadershipTabsContainer.querySelectorAll('.tab-button').forEach(tab => {
                tab.classList.remove('active');
                tab.classList.add('border-transparent', 'text-slate-500', 'hover:text-slate-700', 'hover:border-slate-300');
                tab.classList.remove('bg-blue-100', 'text-blue-800');
            });
            e.target.classList.add('active', 'bg-blue-100', 'text-blue-800');
            e.target.classList.remove('border-transparent', 'text-slate-500', 'hover:text-slate-700', 'hover:border-slate-300');
            leadershipContentContainer.querySelectorAll('div').forEach(content => content.classList.add('hidden'));
            document.getElementById(e.target.dataset.target).classList.remove('hidden');
        }
    });

    const productivityErrorsChartCtx = document.getElementById('productivityErrorsChart').getContext('2d');
    new Chart(productivityErrorsChartCtx, {
        type: 'bar',
        data: productivityErrorsData,
        options: {
            indexAxis: 'y',
            maintainAspectRatio: false,
            responsive: true,
            scales: {
                x: { beginAtZero: true }
            },
            plugins: {
                legend: { display: false },
                title: { display: false },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            if (context.parsed.x !== null) {
                                label += context.parsed.x + '%';
                            }
                            return label;
                        }
                    }
                }
            }
        }
    });

    const globalizationChartCtx = document.getElementById('globalizationChart').getContext('2d');
    new Chart(globalizationChartCtx, {
        type: 'bar',
        data: globalizationData,
        options: {
            indexAxis: 'y',
            maintainAspectRatio: false,
            responsive: true,
            scales: {
                x: { beginAtZero: true }
            },
            plugins: {
                legend: { display: false },
                title: { display: false }
            }
        }
    });

    const esgAccordionContainer = document.getElementById('esg-accordion');
    esgData.forEach(item => {
        const accordionItem = document.createElement('div');
        accordionItem.innerHTML = `
            <details class="bg-slate-50 p-4 rounded-lg cursor-pointer">
                <summary class="font-bold text-md">${item.title}</summary>
                <p class="mt-2 text-sm text-slate-600">${item.content}</p>
            </details>
        `;
        esgAccordionContainer.appendChild(accordionItem);
    });
    
    const tuckmanDetailsDiv = document.getElementById('tuckman-details');
    document.querySelectorAll('.pentagon-segment').forEach(segment => {
        segment.addEventListener('click', (e) => {
            const stage = e.target.dataset.stage;
            const data = tuckmanStagesData[stage];
            if (data) {
                tuckmanDetailsDiv.innerHTML = `
                    <h5 class="text-lg font-bold text-blue-600">${data.name}</h5>
                    <p class="text-slate-700 mt-2">${data.description}</p>
                    <h6 class="font-bold text-slate-800 mt-3">O que o gestor deve fazer:</h6>
                    <ul class="list-disc list-inside space-y-1 text-slate-600">${data.managerActions.map(action => `<li>${action}</li>`).join('')}</ul>
                `;
            }
        });
    });

    const lencioniDetailsDiv = document.getElementById('lencioni-details');
    document.querySelectorAll('.lencioni-pyramid-segment').forEach(segment => {
        segment.addEventListener('click', (e) => {
            document.querySelectorAll('.lencioni-pyramid-segment').forEach(s => s.classList.remove('active'));
            e.target.classList.add('active');
            const challenge = e.target.dataset.lencioni;
            const data = lencioniChallengesData[challenge];
            if (data) {
                lencioniDetailsDiv.innerHTML = `
                    <h5 class="text-lg font-bold text-blue-600">${data.name}</h5>
                    <p class="text-slate-700 mt-2">${data.description}</p>
                `;
            }
        });
    });

    document.querySelectorAll('.pyramid-segment').forEach(segment => {
        segment.addEventListener('click', (e) => {
            const content = segment.querySelector('.pyramid-segment-content');
            segment.classList.toggle('active');
        });
    });


    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
    });

    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            if(this.closest('#mobile-menu')) {
               mobileMenu.classList.add('hidden');
            }
        });
    });
});
